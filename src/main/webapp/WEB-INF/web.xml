<?xml version="1.0" encoding="utf-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    version="2.5">

<!--
    <filter>
        <filter-name>appstats</filter-name>
        <filter-class>com.google.appengine.tools.appstats.AppstatsFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>appstats</filter-name>
        <url-pattern>/api/*</url-pattern>
        <url-pattern>/_ah/warmup/*</url-pattern>
    </filter-mapping>
 -->

    <!-- Must be the first filter to get invoked. Since objectify state has to be cleaned up by
         this filter and both the AuthFilter and the SeoFilter update objectify entities. -->
    <filter>
        <filter-name>ObjectifyFilter</filter-name>
        <filter-class>com.googlecode.objectify.ObjectifyFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>ObjectifyFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <url-pattern>/_ah/warmup/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>BootstrapPropertiesFilter</filter-name>
        <filter-class>org.karmaexchange.util.BootstrapPropertiesFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>BootstrapPropertiesFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>SeoFilter</filter-name>
        <filter-class>com.github.avaliani.snapshot.SeoFilter</filter-class>
        <init-param>
            <param-name>snapshotService</param-name>
            <param-value>com.github.avaliani.snapshot.AjaxSnapshotsSnapshotService</param-value>
        </init-param>
        <init-param>
            <param-name>snapshotServiceTokenProvider</param-name>
            <param-value>org.karmaexchange.snapshot.AjaxSnapshotsServiceTokenProvider</param-value>
        </init-param>
        <init-param>
            <param-name>seoFilterEventHandler</param-name>
            <param-value>org.karmaexchange.snapshot.SeoFilterEventHandlerImpl</param-value>
        </init-param>
        <init-param>
            <param-name>loggingLevel</param-name>
            <param-value>WARNING</param-value>
        </init-param>
        <init-param>
            <param-name>forwardRequestsUsingLocalPort</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>SeoFilter</filter-name>
        <url-pattern>/</url-pattern>
    </filter-mapping>

    <!-- This filter renders a static page. -->
    <filter>
        <filter-name>RootPageFilter</filter-name>
        <filter-class>org.karmaexchange.task.RootPageFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>RootPageFilter</filter-name>
        <url-pattern>/</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>AuthFilter</filter-name>
        <filter-class>org.karmaexchange.auth.AuthFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>AuthFilter</filter-name>
        <url-pattern>/api/*</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>Jersey Web Application</servlet-name>
        <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>org.karmaexchange.resources;org.karmaexchange.resources.derived</param-value>
        </init-param>
        <init-param>
            <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
            <param-value>true</param-value>
        </init-param>
        <!-- Required to handle Jersey WADL IllegalAccessError.
             http://stackoverflow.com/questions/14305035/jersey-setup-on-app-engine
        -->
        <init-param>
            <param-name>com.sun.jersey.config.feature.DisableWADL</param-name>
            <param-value>true</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Jersey Web Application</servlet-name>
        <url-pattern>/api/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>DeleteBlobServlet</servlet-name>
        <servlet-class>org.karmaexchange.task.DeleteBlobServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>DeleteBlobServlet</servlet-name>
        <url-pattern>/task/delete_blob</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>ProcessRatingsServlet</servlet-name>
        <servlet-class>org.karmaexchange.task.ProcessRatingsServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ProcessRatingsServlet</servlet-name>
        <url-pattern>/task/process_ratings</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>ProcessEventCompletionsServlet</servlet-name>
        <servlet-class>org.karmaexchange.task.ProcessEventCompletionsServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ProcessEventCompletionsServlet</servlet-name>
        <url-pattern>/task/process_event_completions</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>UpdateNamedKeysAdminTaskServlet</servlet-name>
        <servlet-class>org.karmaexchange.task.UpdateNamedKeysAdminTaskServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>UpdateNamedKeysAdminTaskServlet</servlet-name>
        <url-pattern>/task/update_named_keys</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>ComputeLeaderboardServlet</servlet-name>
        <servlet-class>org.karmaexchange.task.ComputeLeaderboardServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ComputeLeaderboardServlet</servlet-name>
        <url-pattern>/task/compute_leaderboard</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>_ah_warmup</servlet-name>
        <servlet-class>org.karmaexchange.bootstrap.WarmupServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>_ah_warmup</servlet-name>
        <url-pattern>/_ah/warmup</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>PersistProductionResourcesServlet</servlet-name>
        <servlet-class>org.karmaexchange.bootstrap.PersistProductionResourcesServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>PersistProductionResourcesServlet</servlet-name>
        <url-pattern>/bootstrap/production_resources</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>PersistTestResourcesServlet</servlet-name>
        <servlet-class>org.karmaexchange.bootstrap.PersistTestResourcesServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>PersistTestResourcesServlet</servlet-name>
        <url-pattern>/bootstrap/test_resources</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>PurgeAllResourcesServlet</servlet-name>
        <servlet-class>org.karmaexchange.bootstrap.PurgeAllResourcesServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>PurgeAllResourcesServlet</servlet-name>
        <url-pattern>/bootstrap/purge_resources</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>GenerateDatastoreIndexesXmlServlet</servlet-name>
        <servlet-class>org.karmaexchange.bootstrap.GenerateDatastoreIndexesXmlServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>GenerateDatastoreIndexesXmlServlet</servlet-name>
        <url-pattern>/bootstrap/datastore_indexes</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>FacebookRegistrationServlet</servlet-name>
        <servlet-class>org.karmaexchange.provider.FacebookRegistrationServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>FacebookRegistrationServlet</servlet-name>
        <url-pattern>/provider/fb/register</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>DeleteWebPageSnapshotsServlet</servlet-name>
        <servlet-class>org.karmaexchange.bootstrap.DeleteWebPageSnapshotsServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>DeleteWebPageSnapshotsServlet</servlet-name>
        <url-pattern>/bootstrap/delete_snapshots</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>mapreduce</servlet-name>
        <servlet-class>com.google.appengine.tools.mapreduce.MapReduceServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>mapreduce</servlet-name>
        <url-pattern>/mapreduce/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>pipeline</servlet-name>
        <servlet-class>com.google.appengine.tools.pipeline.impl.servlets.PipelineServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>pipeline</servlet-name>
        <url-pattern>/_ah/pipeline/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>appstats</servlet-name>
        <servlet-class>com.google.appengine.tools.appstats.AppstatsServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>appstats</servlet-name>
        <url-pattern>/appstats/*</url-pattern>
    </servlet-mapping>

    <security-constraint>
        <web-resource-collection>
            <web-resource-name>appstats</web-resource-name>
            <url-pattern>/appstats/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>admin</role-name>
        </auth-constraint>
    </security-constraint>

    <security-constraint>
        <web-resource-collection>
            <url-pattern>/bootstrap/*</url-pattern>
            <url-pattern>/local_test/*</url-pattern>
            <url-pattern>/mapreduce/*</url-pattern>
            <url-pattern>/task/*</url-pattern>
            <url-pattern>/api/admin/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>admin</role-name>
        </auth-constraint>
        <user-data-constraint>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
    </security-constraint>

    <security-constraint>
        <web-resource-collection>
            <url-pattern>/*</url-pattern>
        </web-resource-collection>
        <user-data-constraint>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
    </security-constraint>

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

</web-app>
